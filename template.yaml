AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation with Lambda function for Database DynamoDB and API gateway for Student Result data.

Resources:
  # DynamoDB Table to store student results
  StudentResultsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Results
      AttributeDefinitions:
        - AttributeName: name
          AttributeType: S
      KeySchema:
        - AttributeName: name
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST 


  # IAM Role for Lambda functions
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - lambda.amazonaws.com
            Action: 
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess

  # Lambda Function to Store Result
  StoreStudentLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: StoreStudentResult
      Handler: StoreResult.handler
      Runtime: python3.9
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: studentresultstack-lambda-code-bucket-final
        S3Key: lambda/StoreResult.zip
      Timeout: 10


  # Lambda Function to Get Student Result

  GetStudentLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: GetStudentResult
      Handler: GetResult.handler
      Runtime: python3.9
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: studentresultstack-lambda-code-bucket-final
        S3Key: lambda/GetResult.zip
      Timeout: 10


  # API Gateway â€” Create REST API

  StudentApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: StudentResultApi


  # API Resource /store

  StudentApiResourceStore:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref StudentApi
      ParentId: !GetAtt StudentApi.RootResourceId
      PathPart: store


  # API Resource /get

  StudentApiResourceGet:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref StudentApi
      ParentId: !GetAtt StudentApi.RootResourceId
      PathPart: get


  # POST Method /store

  StoreApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref StudentApi
      ResourceId: !Ref StudentApiResourceStore
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: 
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${StoreStudentLambda.Arn}/invocations


  # GET
  GetApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref StudentApi
      ResourceId: !Ref StudentApiResourceGet
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: 
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetStudentLambda.Arn}/invocations


  # Lambda Permissions for API Gateway
  StoreLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref StoreStudentLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: 
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${StudentApi}/*/POST/store

  GetLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref GetStudentLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: 
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${StudentApi}/*/GET/get


  # Deploy API Gateway Stage

  StudentApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: [StoreApiMethod, GetApiMethod] 
    Properties:
      RestApiId: !Ref StudentApi
      StageName: prod

Outputs:
  ApiUrlStore:
    Description: URL to store student result
    Value: 
      Fn::Sub: https://${StudentApi}.execute-api.${AWS::Region}.amazonaws.com/prod/store

  ApiUrlGet:
    Description: URL to get student result
    Value: 
      Fn::Sub: https://${StudentApi}.execute-api.${AWS::Region}.amazonaws.com/prod/get
