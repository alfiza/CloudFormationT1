AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  LambdaFunctionName:
    Type: String
    Default: MyRestApiFunction
  ApiName:
    Type: String
    Default: MyRestApi
  StageName:
    Type: String
    Default: v1
    Description: Name of API stage

Resources:
  Api:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ReqValidatorsSample

  RequestBodyModelId:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: !Ref Api
      ContentType: application/json
      Description: Request body model for Pet ID
      Schema:
        $schema: 'http://json-schema.org/draft-04/schema#'
        title: RequestBodyModelId
        properties:
          id:
            type: integer

  RequestBodyModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: !Ref Api
      ContentType: application/json
      Description: Request body model for Pet (type, name, price, id)
      Schema:
        $schema: 'http://json-schema.org/draft-04/schema#'
        title: RequestBodyModel
        required:
          - price
          - name
          - type
        type: object
        properties:
          id:
            "$ref": !Sub
              - 'https://apigateway.amazonaws.com/restapis/${Api}/models/${RequestBodyModelId}'
              - Api: !Ref Api
                RequestBodyModelId: !Ref RequestBodyModelId
          price:
            type: number
            minimum: 25
            maximum: 500
          name:
            type: string
          type:
            type: string
            enum:
              - dog
              - cat
              - fish

  GETValidator:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      Name: params-only
      RestApiId: !Ref Api
      ValidateRequestBody: False
      ValidateRequestParameters: True

  POSTValidator:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      Name: body-only
      RestApiId: !Ref Api
      ValidateRequestBody: True
      ValidateRequestParameters: False

  ValidationResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref Api
      ParentId: !GetAtt Api.RootResourceId
      PathPart: validation

  ValidationMethodGet:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref Api
      ResourceId: !Ref ValidationResource
      HttpMethod: GET
      AuthorizationType: NONE
      RequestValidatorId: !Ref GETValidator
      RequestParameters:
        method.request.querystring.q1: true
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub > arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyLambdaFunction.Arn}/invocations

  ValidationMethodPost:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref Api
      ResourceId: !Ref ValidationResource
      HttpMethod: POST
      AuthorizationType: NONE
      RequestValidatorId: !Ref POSTValidator
      RequestModels:
        application/json: !Ref RequestBodyModel
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub > arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyLambdaFunction.Arn}/invocations


  #----Lambda code starts----

  MyLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: handler.lambda_handler
      Runtime: python3.9
      Role: !GetAtt MyLambdaExecutionRole.Arn
      Code:
        S3Bucket: lambda-bucket-task-t1        # Replace with real bucket name
        S3Key: lambda-code.zip       # Replace with your zip file key
      Timeout: 10
      MemorySize: 128

  ApiGatewayInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref MyLambdaFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${Api}/*/*/validation
  
  #----Lambda code ends----
  ApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - ValidationMethodGet
      - ValidationMethodPost
      - MyLambdaFunction
    Properties:
      RestApiId: !Ref Api
      StageName: !Sub '${StageName}'

Outputs:
  ApiRootUrl:
    Description: Root Url of the API
    Value: !Sub 'https://${Api}.execute-api.${AWS::Region}.amazonaws.com/${StageName}'
    